# Azure Bootcamp 25th April #

## How MS present Azure - The Cloud for Modern Business ##

Why the cloud?
1.  Speed
2.  Scale
3.  Economics

Pizza as a service example:

Hosting Models
- On prem (Pizza made at home)
- Infrastructure as a service (Bake at home)
- Platform as a service (Take away)
Business Models
- SAAS (Eat out)

Azure footprint - 19 regions (as of April 2015)

Datacenters owned and operated by MS. 

Azure SQL Scale Out
https://www.pottermore.com/

Used PAAS. Had 160million requests in 24h.  SQL as a service. Web roles for site and set to autoscale.  

Monthly SLA

- Offer SLA on different services, look at SLA for service when comparing. 


## Virtual Machines ##

Getting started:
- Management portal
- Scripting
- REST Api
	- Rest API docs have a date header, so you can go back to old APIs
- Comprehensive networking

Most people do command and control using powershell

- Select image size and VM, can upload your own vhd


## SQL Database ##

- SQL as a Service
- Fully managed
- Enterprise ready with automatic support for HA
- Elastic scale out
- Can scale based on DTUs
- Support for TDS and ODBC
- Cross datacenter failover and backups to support disaster recovery scenarios (see scott gu on channel 9)

## HDInsights (Hadoop) ##

## Azure ML ##

## App Service Web Apps (Azure Websites) ##

Can rollback versions

App service:
- Web Apps
- Mobile Apps
- Logic Apps
- API Apps

## Visual Studio - Application Insights ##

Application telemetary.
Now point and click.

VS Online has load testing

## Azure AD ##

## Media Services ##

## Internet of Things ##

- Event Hubs
- Notification Hubs
- Stream Analytics
- ML
- HDInsight

## Azure Data Factory ##

- Take files and put into Azure data sources

## Azure stream analytics ##

## Lab - Cloud Services  ##

Cloud Service - stateless no persisted storage.  
Can monitor end points.
Scaling control.
Linked resources - can link a resource and stop the cloud service being deleted if a database exists for example
Need to have packaged .net and configuration file.

## Building Cloud Solutions ##

Why use Azure:
Can move infrastructure as is, then migrate to PAAS.

-> Microsoft trying to solve problems of distributed computing.

Your Service
- Your application code
- Required resources

In the cloud:
- Automation
- Version environments
- Continuous Deployment

Cloud Services

Focus on application
Cloud responsible for scalability, availability, diagnostics
Choice of:
- VM (Server 2012 R2)
- Worker role has .Net installed
- Web role ASP.Net and IIS

Create endpoints (port forwarding)
- public endpoints
- internal endpoints
- instance input endpoints

Hosts:
- webforms or MVC
- FastCGI - php etc
- Multiple websites
- Http/s
- Web/worker hybrid

Worker role patterns
- Queue polling worker
- Listening worker role (WCF endpoint)
- External process worker role

Use tasks rather than write multithreading code.  Just say I have some work that needs doing.  

Think about other ways of dividing an writing code, e.g. orleans etc [https://github.com/dotnet/orleans ](https://github.com/dotnet/orleans "https://github.com/dotnet/orleans")

## Design for Cloud ##

As long as you have one server there were no issues, hardest step was from going from one to two - because of state management.

Cloud is not reliable - because services are distributed you need to embrace errors - most are still transient errors.  Eg. Getting access to the database - do I need to retry after a period of time? (Eg supported in EF6).

Sample architecture:

US West Website
SQL Azure
Azure AD
Service Bus
CDN
Cache

[https://github.com/Azure-Readiness](https://github.com/Azure-Readiness "https://github.com/Azure-Readiness")

Azure Websites Git Deployment - source code:
[https://github.com/projectkudu/kudu](https://github.com/projectkudu/kudu "https://github.com/projectkudu/kudu")

## Redundancy in Azure
 ##

- Azure storage with replicas.
- SQL Database built-in backup servers
- Azure Caching wih HA
- Multi instance Azure WEbsites and Loud Services
- Load balanced virtual machines
- Virtual networks
- Traffic manager for failover

Power BI - alternative to SSRS 
[https://www.microsoft.com/en-us/powerbi/default.aspx](https://www.microsoft.com/en-us/powerbi/default.aspx "https://www.microsoft.com/en-us/powerbi/default.aspx")

## Reliability ##

- Auto recovery
- VIP Swap
- Fault domain
- VM Availability set

## What does failsafe mean for my applications? ##

- Take advantage of Azure features
- Avoid single point of failure
- Failure mode analysis
- Some errors are transient
- Graceful degredation 

- Use Service bus for communication between apps - already deals with with transient faults

[https://msdn.microsoft.com/en-us/library/hh680934(v=pandp.50).aspx](https://msdn.microsoft.com/en-us/library/hh680934(v=pandp.50).aspx "https://msdn.microsoft.com/en-us/library/hh680934(v=pandp.50).aspx")


[Post Sharp](https://www.postsharp.net/ "https://www.postsharp.net/")


## Azure Data Platform ##

SQL Database
SQL Azure VM
DocumentDb
Azure Search
3rd Party 


### SQL Server PAAS ###
- Fully Managed
- Enterprise ready HA, DR
- Backup and replication behind the scenes

Scale out with elastic scale
Uptime of 99.99% SLA

SQL Azure - not able to use Azure AD.

Only two modes of using a firewall - to allow Azure Services.  All of the external pool of addresses that SQL uses are then included.

Azure platform powershell commandlets.  

You pay for egres and will pay for data in the same service.  Better to keep everything in one region and replicate between regions.

Selecting the Right Database Edition
- Premium for mission critical

### Geo-replication ###
- Opt-in for standard and premium databases
- Creates a stand-by secondary
- Replicate to pre-pared Azure region
- Automatic, async replication
- Microsoft managed RTO < 24h, RPO < 1h

### Active geo-replication in premium ###
RTO < 1 RPO < 5m

### Auditing ###
- logs
- Dashboards
- Audit logs in storage account

### Elastic Scale ###
Custom Sharding
Scale out via .Net client libraries
Split, merge etc

### SQL on a VM ###

How to optimise your database, caching, block sizes.  

### DocumentDB ###

Managed, scalable, queryable, schema free JSON.

Consistency settings
- Strong
- Bounded Stateless
- Session
- Eventual


